#!/usr/local/bin/python3
import time
import asyncio
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.chrome.service import Service
from aiogram import Bot, Dispatcher, types
from aiogram.types import Message
from webdriver_manager.chrome import ChromeDriverManager


# Telegram —Ç–æ–∫–µ–Ω –∏ ID —á–∞—Ç–∞ (–∑–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–∏)
TELEGRAM_TOKEN = os.getenv("BOT_TOKEN")
CHAT_ID = os.getenv("CHAT_ID")

bot = Bot(token=TELEGRAM_TOKEN)
dp = Dispatcher()

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–∞—Ç
async def check_dates():
    options = webdriver.ChromeOptions()
    options.add_argument("--headless")  # –ó–∞–ø—É—Å–∫ –±–µ–∑ UI
    options.add_argument("--disable-gpu")
    options.add_argument("--no-sandbox")
    
    chrome_driver_path = "/opt/homebrew/bin/chromedriver"  # –£–∫–∞–∂–∏ —Å–≤–æ–π –ø—É—Ç—å
    service = Service(chrome_driver_path)

    driver = webdriver.Chrome(service=service, options=options)

    try:
        driver.get("https://rezerwacja.gdansk.uw.gov.pl:8445/qmaticwebbooking/#/")
        time.sleep(3)  # –î–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü–µ –∑–∞–≥—Ä—É–∑–∏—Ç—å—Å—è

        # –í—ã–±–∏—Ä–∞–µ–º –æ—Ç–¥–µ–ª–µ–Ω–∏–µ
        driver.find_element(By.XPATH, '//*[@id="step1"]/div/div[2]/div/div/div/div/div/div/div[4]/div/div').click()
        time.sleep(2)

        # –í—ã–±–∏—Ä–∞–µ–º —É—Å–ª—É–≥—É
        driver.find_element(By.XPATH, '//*[@id="step2"]/div/div/div/div[2]/div/div/div/div[1]/div/div/div/div[2]/div/div[1]/div/div').click()
        time.sleep(2)

        # –ù–∞–∂–∏–º–∞–µ–º –Ω–∞ –∫–Ω–æ–ø–∫—É –¥–∞—Ç—ã
        driver.find_element(By.XPATH, '//*[@id="dateTimeHeading"]').click()
        time.sleep(3)

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–µ–∫—Å—Ç–∞ "Obecnie nie ma wolnych termin√≥w"
        no_dates_text = "Obecnie nie ma wolnych termin√≥w. Proszƒô spr√≥bowaƒá p√≥≈∫niej."
        result = driver.find_elements(By.XPATH, '//*[@id="step3"]/div/div/div/div/div[3]/div/div')

        if result and no_dates_text in result[0].text:
            print("–ù–µ—Ç —Å–≤–æ–±–æ–¥–Ω—ã—Ö –¥–∞—Ç")
        else:
            print("–ï—Å—Ç—å —Å–≤–æ–±–æ–¥–Ω—ã–µ –¥–∞—Ç—ã!")
            await bot.send_message(CHAT_ID, "üîî –°–≤–æ–±–æ–¥–Ω—ã–µ –¥–∞—Ç—ã –ø–æ—è–≤–∏–ª–∏—Å—å! –ü—Ä–æ–≤–µ—Ä—å —Å–∞–π—Ç!")

    except Exception as e:
        print(f"–û—à–∏–±–∫–∞: {e}")
    finally:
        driver.quit()

# –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç
async def scheduler():
    while True:
        await check_dates()
        await asyncio.sleep(300)  # 5 –º–∏–Ω—É—Ç

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def main():
    await bot.send_message(CHAT_ID, "‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –º–æ–Ω–∏—Ç–æ—Ä–∏—Ç –¥–∞—Ç—ã")
    await scheduler()

if __name__ == "__main__":
    asyncio.run(main())
